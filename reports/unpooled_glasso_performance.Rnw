%  SET UP LaTeX DEFAULTS  --------------------------------------
\documentclass{article}
\usepackage[sc]{mathpazo}
\renewcommand{\sfdefault}{lmss}
\renewcommand{\ttdefault}{lmtt}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{3}
% \usepackage[options]{algorithm2e}
\usepackage{url}
\usepackage{setspace}
\usepackage{relsize}
\usepackage{float}
\usepackage{tikz}
\usepackage{amsmath}
\usepackage{enumerate}
\usepackage{booktabs}

\usepackage[authoryear]{natbib}
\usepackage[nottoc]{tocbibind}
\usepackage[unicode=true,pdfusetitle,bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,breaklinks=false,pdfborder={0 0 0},backref=false,colorlinks,citecolor=black,filecolor=black,linkcolor=black,urlcolor=black]{hyperref}
\hypersetup{
    pdfstartview={XYZ null null 1}}
%\usepackage{breakurl}
\makeatletter
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
\renewcommand{\textfraction}{0.05}
\renewcommand{\topfraction}{0.8}
\renewcommand{\bottomfraction}{0.8}
\renewcommand{\floatpagefraction}{0.75}
\usepackage[buttonsize=1em]{animate}
\makeatother
\renewcommand{\bibname}{References}

\begin{document}

\title{Sparse Undirected Graphs for Spatiotemporal Modeling: Summary of Unpooled GLASSO Performance}
\author{Robert A. Giaquinto}
\maketitle

\begin{abstract}
   Abstract goes here!
\end{abstract}

\tableofcontents

%  Base KnitR code ------------------------------------------------------------------
<<setup, include=FALSE, cache=FALSE>>=
library(knitr)

opts_chunk$set(fig.align='center',
    fig.show='hold',
    fig.pos='H',
    message=FALSE,
    warning=FALSE,
    echo=FALSE,
    par=TRUE)
options(width=80, stringsAsFactors=FALSE)

library(ggplot2)
library(scales)
library(reshape2)
library(dplyr)
library(xtable)
library(stringr)
library(readr)
library(huge)
library(lubridate)
library(RColorBrewer)
library(ggmap)
library(geoR)


source_dir <- '/Users/robert/documents/umn/air_pollution/src/main/'
source(paste0(source_dir, 'Utility_Functions.R'))
source(paste0(source_dir, 'Unpooled_Glasso.R'))
source(paste0(source_dir, 'Data_Prep.R'))
@

<<training_parameters>>=
testing_months=6
training_months=24
verbose=FALSE
num_lambdas <- 25
var_list <- list(tar_var=tar_var, date_vars=date_vars, agg_vars=agg_vars, lag_vars=lag_vars)
cov_methods <- c("pearson", "spearman")
spatial_smoothing <- c("none", "distance", "kernel")
@

<<glasso, cache=TRUE>>=
unpooled_results <- Unpooled_Glasso(DF,
    var_list,
    num_lambdas=num_lambdas,
    testing_months=testing_months,
    training_months=training_months,
    cov_methods=cov_methods,
    spatial_smoothing=spatial_smoothing,
    verbose=verbose)
@

\section{Introduction}






\section{Error as a Function of Model Complexity}
What do the model errors look like for known locations and future dates?
<<unpooled_glasso_error>>=
error_curve <- plot_error_curve(unpooled_results)
@
<<show_unpooled_glasso_error, fig.cap=error_curve$plot_caption>>=
print(error_curve$p1)
@

\section{Distribution of Error Across Time and Space}
Plot distribution of error by sliding window time periods.
<<unpooled_window>>=
error_distribution <- plot_error_distribution(unpooled_results, conditional="window")
@
<<unpooled_window_plots, fig.cap=error_distribution$plot_caption>>=
print(error_distribution$out_plot)
@

Plot distribution of error by sliding window time periods.
<<unpooled_location>>=
error_distribution <- plot_error_distribution(unpooled_results, conditional="location_key")
@
<<unpooled_location_plots, fig.cap=error_distribution$plot_caption>>=
print(error_distribution$out_plot)
@

\section{Spatial Correlation}
Are the errors correlated?
<<unpooled_error_correlation, out.width='.49\\textwidth'>>=
p1 <- plot_spatial_correlation(unpooled_results)
map_df <- unique(DF[,c("Latitude", "Longitude", "location_key")])
map_df$location_key <- factor(map_df$location_key)
names(map_df) <- c("lat", "lon", "location")
map <- get_map(location = c(lon=mean(map_df$lon), lat=mean(map_df$lat)),
    zoom=9, maptype="toner-lite", color="bw", messaging=FALSE)
p2 <- ggmap(map) +
    geom_point(data=map_df,
        aes(x=lon, y=lat, colour=location), size=4) +
    labs(x="Longitude", y="Latitude")

print(p1)
print(p2)

@











\end{document}